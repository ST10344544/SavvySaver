// Generated by view binder compiler. Do not edit!
package vcmsa.projects.savvysaver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vcmsa.projects.savvysaver.R;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView balanceText;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final TextView budgetText;

  @NonNull
  public final TextView dashboardHeader;

  @NonNull
  public final Button openAnalysisButton;

  @NonNull
  public final TextView recentExpensesHeader;

  @NonNull
  public final ListView recentExpensesList;

  private ActivityDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView balanceText, @NonNull BottomNavigationView bottomNavigation,
      @NonNull TextView budgetText, @NonNull TextView dashboardHeader,
      @NonNull Button openAnalysisButton, @NonNull TextView recentExpensesHeader,
      @NonNull ListView recentExpensesList) {
    this.rootView = rootView;
    this.balanceText = balanceText;
    this.bottomNavigation = bottomNavigation;
    this.budgetText = budgetText;
    this.dashboardHeader = dashboardHeader;
    this.openAnalysisButton = openAnalysisButton;
    this.recentExpensesHeader = recentExpensesHeader;
    this.recentExpensesList = recentExpensesList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.balance_text;
      TextView balanceText = ViewBindings.findChildViewById(rootView, id);
      if (balanceText == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.budget_text;
      TextView budgetText = ViewBindings.findChildViewById(rootView, id);
      if (budgetText == null) {
        break missingId;
      }

      id = R.id.dashboard_header;
      TextView dashboardHeader = ViewBindings.findChildViewById(rootView, id);
      if (dashboardHeader == null) {
        break missingId;
      }

      id = R.id.open_analysis_button;
      Button openAnalysisButton = ViewBindings.findChildViewById(rootView, id);
      if (openAnalysisButton == null) {
        break missingId;
      }

      id = R.id.recent_expenses_header;
      TextView recentExpensesHeader = ViewBindings.findChildViewById(rootView, id);
      if (recentExpensesHeader == null) {
        break missingId;
      }

      id = R.id.recent_expenses_list;
      ListView recentExpensesList = ViewBindings.findChildViewById(rootView, id);
      if (recentExpensesList == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((ConstraintLayout) rootView, balanceText,
          bottomNavigation, budgetText, dashboardHeader, openAnalysisButton, recentExpensesHeader,
          recentExpensesList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
