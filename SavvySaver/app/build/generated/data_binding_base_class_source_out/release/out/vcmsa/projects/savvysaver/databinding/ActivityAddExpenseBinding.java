// Generated by view binder compiler. Do not edit!
package vcmsa.projects.savvysaver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vcmsa.projects.savvysaver.R;

public final class ActivityAddExpenseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addExpenseHeader;

  @NonNull
  public final EditText amount;

  @NonNull
  public final Spinner categorySpinner;

  @NonNull
  public final EditText date;

  @NonNull
  public final EditText description;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final Button uploadReceiptButton;

  private ActivityAddExpenseBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView addExpenseHeader, @NonNull EditText amount,
      @NonNull Spinner categorySpinner, @NonNull EditText date, @NonNull EditText description,
      @NonNull Button saveButton, @NonNull Button uploadReceiptButton) {
    this.rootView = rootView;
    this.addExpenseHeader = addExpenseHeader;
    this.amount = amount;
    this.categorySpinner = categorySpinner;
    this.date = date;
    this.description = description;
    this.saveButton = saveButton;
    this.uploadReceiptButton = uploadReceiptButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_expense_header;
      TextView addExpenseHeader = ViewBindings.findChildViewById(rootView, id);
      if (addExpenseHeader == null) {
        break missingId;
      }

      id = R.id.amount;
      EditText amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.category_spinner;
      Spinner categorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.date;
      EditText date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.save_button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.upload_receipt_button;
      Button uploadReceiptButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadReceiptButton == null) {
        break missingId;
      }

      return new ActivityAddExpenseBinding((ConstraintLayout) rootView, addExpenseHeader, amount,
          categorySpinner, date, description, saveButton, uploadReceiptButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
